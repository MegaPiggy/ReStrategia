// Contract for Kerbin orbital program.
//   Author: fwdixon
//   Attributions: Contracts copied and adapted from Career Evolution Contract Pack by pap1723, Strategia headers taken from Strategia by nightingale
//   Contract License: CC-BY-NC-SA
//   Strategia License: MIT

CONTRACT_TYPE
{
    name = STG_KerbinProgram
    group = Strategia

    genericTitle = The Home World Program
    genericDescription = This is a Strategia contract that is automatically accepted when the pre-requisite strategy is taken.

    title = @strategy
    description = @strategy.description()
    synopsis = @strategy.synopsis()
    completedMessage = @strategy.completedMessage()

    agent = Strategia

    targetBody = @strategy.targetBody()

    autoAccept = true
    cancellable = false

    maxSimultaneous = 1

    prestige = Exceptional

    // Contract rewards
    advanceFunds = @strategy.advanceFunds() / ContractMultiplier()
    rewardFunds = @strategy.rewardFunds() / ContractMultiplier()
    rewardReputation = @strategy.rewardReputation() / ContractMultiplier()
    failureReputation = @strategy.failureReputation() / ContractMultiplier()
    failureFunds = @strategy.failureFunds() / ContractMultiplier()

    DATA
    {
        type = StrategiaStrategy
        requiredValue = true
        title = The pre-requisite strategy must be taken

        strategy = ActiveStrategies().Where(s => s.contractType() == @name).First()
    }

    DATA
    {
        type = string
        uniquenessCheck = CONTRACT_ALL
        hidden = true

        strategyName = @/strategy.Name()
    }

//	Break the Sound Barrier

    PARAMETER
    {
		name = FirstLaunch
		type = VesselParameterGroup
		title = Launch Our First Kerbal
		define = FirstLaunch
		
		completedMessage = I feel the need, the need for speed!
		
		rewardFunds = 2500
		rewardScience = 2
		rewardReputation = 1
		
		disableOnStateChange = false
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
		}
		PARAMETER
		{
			name = OneCrew
			type = HasCrew
			minCrew = 1
			maxCrew = 99
			title = Have at least 1 crewmember on board
			hideChildren = true
		}
		PARAMETER
		{
			name = BreakSoundBarrier
			type = ReachState
			minSpeed = 343
			situation = FLYING
			title = Fly faster than 343 m/s
			disableOnStateChange = true
			hideChildren = true
		}
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			targetBody = HomeWorld()
			title = Return Home Safely
			hideChildren = true
		}
		PARAMETER
		{
			name = RecoverVessel
			type = RecoverVessel
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
		}
	}
	
// Reach the Upper Atmosphere
	PARAMETER
	{
		name = UpperAtmo
		type = VesselParameterGroup
		title = Reach the Upper Atmosphere
		define = UpperAtmo
		
		rewardFunds = 4000
		rewardScience = 3
		rewardReputation = 2
		
		completedMessage = From that high up you can see the Snack Factory!
		
		completeInSequence = true
		disableOnStateChange = true

		PARAMETER
		{
			name = OneCrew
			type = HasCrew
			minCrew = 1
			maxCrew = 99
			title = Have at least 1 crewmember on board
			hideChildren = true
		}
		PARAMETER
		{
			name = UpperAtmo
			type = ReachState
			minAltitude = HomeWorld().FlyingAltitudeThreshold()
			situation = FLYING
			title = Fly higher than @minAltitude
			disableOnStateChange = true
			hideChildren = true
		}
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			targetBody = HomeWorld()
			title = Return Home Safely
			hideChildren = true
			completeInSequence = true
		}
		PARAMETER
		{
			name = RecoverVessel
			type = RecoverVessel
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
		}	
	}
	
// Cross the Karman Line
	PARAMETER
	{
		name = KarmanLineCrew
		type = VesselParameterGroup
		title = Cross the Karman Line
		define = KarmanLineCrew
		
		completedMessage = Space! It does exist!
		
		rewardFunds = 5500
		rewardScience = 4
		rewardReputation = 3
		
		completeInSequence = true
		disableOnStateChange = true	
		
		PARAMETER
		{
			name = OneCrew
			type = HasCrew
			minCrew = 1
			maxCrew = 99
			title = Have at least 1 crewmember on board
			hideChildren = true
		}
		PARAMETER
        {
            name = ReachState
            type = ReachState
            situation = SUB_ORBITAL
			disableOnStateChange = true
			title = Achieve a Sub Orbital trajectory
			disableOnStateChange = true
			hideChildren = true
        }
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			targetBody = HomeWorld()
			title = Return Home Safely
			hideChildren = true
			completeInSequence = true
		}
		PARAMETER
		{
			name = RecoverVessel
			type = RecoverVessel
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
		}		
	}
// Orbit and Return
	PARAMETER
	{
		name = CrewedOrbit
		type = VesselParameterGroup
		title = Kerbal in Orbit
		define = CrewedOrbit

		completedMessage = Hey Bob, you gotta try this!
		
		rewardFunds = 9000
		rewardScience = 5
		rewardReputation = 5
		
		completeInSequence = true
		disableOnStateChange = true	
		
		PARAMETER
		{
			name = OneCrew
			type = HasCrew
			minCrew = 1
			maxCrew = 99
			title = Have at least 1 crewmember on board
			hideChildren = true
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = Orbit
			type = Orbit
			targetBody = HomeWorld()
			minAltitude = @targetBody.AtmosphereAltitude()
			title = Reach Orbit
			disableOnStateChange = true
			hideChildren = true
		}
		PARAMETER
		{
			name = OneDay
			type = Duration
			duration = 1d
			preWaitText = Waiting to reach orbit
			waitingText = Orbiting for @duration
			completionText = Orbits Complete! You may fire retros when ready
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			targetBody = HomeWorld()
			title = Return Home Safely
			hideChildren = true
			completeInSequence = true
		}
		PARAMETER
		{
			name = RecoverVessel
			type = RecoverVessel
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
		}
	}
	
//	Send 2 Kerbals into Orbit for 1 week & EVA
	PARAMETER
	{
		name = TwoLiveCrew
		type = VesselParameterGroup
		title = 2 Kerbals in Orbit
		define = TwoLiveCrew
		
		completedMessage = Congratulations! Now that we have proven we can launch multiple Kerbals on the same craft, we need to explore the other things that will extend our reach among the stars.
		
		rewardFunds = 10000
		rewardScience = 7
		rewardReputation = 5
		
		disableOnStateChange = true
		completeInSequence = true
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER
		{
			name = TwoCrew
			type = HasCrew
			minCrew = 2
			maxCrew = 99
			title = Have at least 2 crewmembers on board
			hideChildren = true
		}
		PARAMETER
		{
			name = Orbit
			type = Orbit
			targetBody = HomeWorld()
			minAltitude = @targetBody.AtmosphereAltitude()
			title = Reach Orbit
			disableOnStateChange = true
			hideChildren = true
		}
		PARAMETER
		{
			name = EVAReportInOrbit
			type = All
			title = Reach Orbit, Perform an EVA and TRANSMIT the data back to KSC
			hideChildren = true
			PARAMETER
			{
				name = OrbitEarth
				type = Orbit
				minPeA = @targetBody.AtmosphereAltitude()
				targetBody = HomeWorld()
			}
			PARAMETER
			{
				name = EVAReport
				type = CollectScience
				targetBody = HomeWorld()
				situation = InSpaceLow
				experiment = evaReport
				recoveryMethod = RecoverOrTransmit
			}
			disableOnStateChange = true // when you go inside
		}
		PARAMETER
		{
			name = OneWeek
			type = Duration
			duration = 7d
			preWaitText = Waiting to reach orbit
			waitingText = Orbiting for @duration
			completionText = Orbits Complete! You may fire retros when ready
			disableOnStateChange = true
			NEEDS[TacLifeSupport|USILifeSupport|Snacks]
		}
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			targetBody = HomeWorld()
			title = Return Home Safely
			hideChildren = true
			completeInSequence = true
		}
		PARAMETER
		{
			name = RecoverVessel
			type = RecoverVessel
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
		}
	}

// Rendezvous
	PARAMETER
	{
		name = Rendezvous
		type = VesselParameterGroup
		title = First Rendezvous
		define = Rendezvous
		
		completedMessage = Congratulations! Apparently it IS possible for two spacecraft to meet in space!
		
		rewardFunds = 12500
		rewardScience = 8
		rewardReputation = 10
		
		disableOnStateChange = true
		completeInSequence = true
		
		PARAMETER
		{
			name = TwoCrew
			type = HasCrew
			minCrew = 1
			maxCrew = 99
			title = Have at least 1 crewmember on board
			hideChildren = true
		}
		PARAMETER
		{
			name = Orbit
			type = Orbit
			minPeA = @targetBody.AtmosphereAltitude()
			title = Orbit @targetBody
			disableOnStateChange = true
			hideChildren = true
		}
		PARAMETER
		{
			name = Rendezvous
			type = Rendezvous
			distance = 100
			title = Rendezvous two craft in Orbit
			hideChildren = true
			disableOnStateChange = true
		}

		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			targetBody = HomeWorld()
			title = Return Home Safely
			hideChildren = true
			completeInSequence = true
		}
		PARAMETER
		{
			name = RecoverVessel
			type = RecoverVessel
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
		}
	}

// Docking
	PARAMETER
	{
		name = Docking
		type = VesselParameterGroup
		title = First Docking
		define = Docking
		
		completedMessage = Congratulations! We have achieved a hard dock! This opens up new possibilities as to what we can accomplish in space. This will allow us to create complex ships that can be assembled in orbit and to eventually learn how to create space stations.
		
		rewardFunds = 15000
		rewardScience = 10
		rewardReputation = 15
		
		disableOnStateChange = true
		completeInSequence = true
	
		PARAMETER
		{
			name = TwoCrew
			type = HasCrew
			minCrew = 1
			maxCrew = 99
			title = Have at least 1 crewmember on board
			hideChildren = true
		}
		PARAMETER
		{
			name = Orbit
			type = Orbit
			minPeA = @targetBody.AtmosphereAltitude()
			title = Orbit @targetBody
			disableOnStateChange = true
			hideChildren = true
		}
		PARAMETER
		{
			name = Docking
			type = Docking
			title = Dock two spacecraft in orbit
			hideChildren = true
			disableOnStateChange = true
			completeInSequence = true
		}
		PARAMETER
		{
			name = RecoverVessel
			type = RecoverVessel
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
		}
	}
}
