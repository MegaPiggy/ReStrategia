// Contract for home world probes.
//   Author: fwdixon
//   Attributions: Contracts copied and adapted from Career Evolution Contract Pack by pap1723, Strategia headers taken from Strategia by nightingale
//   Strategia License: MIT
//   Contract License: CC-BY-NC-SA


CONTRACT_TYPE
{
    name = STG_KerbinProbes
    group = Strategia

    genericTitle = Home World Probes
    genericDescription = This is a Strategia contract that is automatically accepted when the pre-requisite strategy is taken.

    title = @strategy
    description = @strategy.description()
    synopsis = @strategy.synopsis()
    completedMessage = @strategy.completedMessage()

    agent = Strategia

    targetBody = @strategy.targetBody()

    autoAccept = true
    cancellable = false

    maxSimultaneous = 1

    prestige = Exceptional

    // Contract rewards
    advanceFunds = @strategy.advanceFunds() / ContractMultiplier()
    rewardFunds = @strategy.rewardFunds() / ContractMultiplier()
    rewardReputation = @strategy.rewardReputation() / ContractMultiplier()
    failureReputation = @strategy.failureReputation() / ContractMultiplier()
    failureFunds = @strategy.failureFunds() / ContractMultiplier()

    DATA
    {
        type = StrategiaStrategy
        requiredValue = true
        title = The pre-requisite strategy must be taken

        strategy = ActiveStrategies().Where(s => s.contractType() == @name).First()
    }

    DATA
    {
        type = string
        uniquenessCheck = CONTRACT_ALL
        hidden = true

        strategyName = @/strategy.Name()
    }
	
	DATA
	{
		type = double
		upperAtmo = HomeWorld().FlyingAltitudeThreshold() / 1000
		title = Upper Atmosphere
	}
	
	DATA
	{
		type = double
		space = HomeWorld().AtmosphereAltitude() / 1000
		title = Upper Atmosphere
	}

// Launch First Rocket
	PARAMETER
	{
		name = FirstRocket
		type = VesselParameterGroup
		title = Launch your first rocket
		define = FirstRocket
		
		completedMessage = That thing went off like a rocket!
		
		rewardFunds = 2500 / ContractMultiplier()
		rewardScience = 2 / ContractMultiplier()
		rewardReputation = 1 / ContractMultiplier()
		
		disableOnStateChange = true
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			hideChildren = true
			title = Uncrewed
			minCrew = 0
			maxCrew = 0
		}
		PARAMETER
		{
			name = ReachState
			type = ReachState
			minAltitude = 200
			disableOnStateChange = true
			situation = FLYING
			title = Launch your first rocket and get to at least 200 meters off the ground!
			hideChildren = true
		}
		PARAMETER
		{
			name = RecoverVessel
			type = RecoverVessel
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
		}
	}
// Reach the Upper Atmosphere
	PARAMETER
	{
		name = UpperAtmoRocket
		type = VesselParameterGroup
		title = Launch a rocket to the Upper Atmosphere
		define = UpperAtmoRocket
		
		completedMessage = Anybody seen Jeb?
		
		rewardFunds = 3500 / ContractMultiplier()
		rewardScience = 3 / ContractMultiplier()
		rewardReputation = 1 / ContractMultiplier()
		
		completeInSequence = true
		disableOnStateChange = true
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			hideChildren = true
			title = Uncrewed
			minCrew = 0
			maxCrew = 0
		}
		PARAMETER
		{
			name = ReachUpperAtmo
			type = ReachState
			minAltitude = HomeWorld().FlyingAltitudeThreshold()
			disableOnStateChange = true
			situation = FLYING
			title = Reach the upper atmosphere above @/upperAtmo km
			hideChildren = true
		}
		PARAMETER
		{
			name = RecoverVessel
			type = RecoverVessel
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
		}
	}

// Escape the Atmosphere
    PARAMETER
	{
		name = OrbitReturn
		type = VesselParameterGroup
		title = Suborbital Return
		
		completedMessage = One more booster and it will be ours!
		
		rewardFunds = 4500 / ContractMultiplier()
		rewardScience = 4 / ContractMultiplier()
		rewardReputation = 2 / ContractMultiplier()
		
		completeInSequence = true
		disableOnStateChange = true
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER
		{
			name = HasNoCrew
			type = HasCrew
			maxCrew = 0
			minCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = ReachSpace
			type = ReachState
			disableOnStateChange = True
			situation = SUB_ORBITAL
			title = Reach Space
		}
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			targetBody = HomeWorld()
			title = Return Home Safely
			hideChildren = true
			completeInSequence = true
		}
		PARAMETER
		{
			name = RecoverVessel
			type = RecoverVessel
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
		}
	}
	
// Orbit & Transmit Science
	PARAMETER
	{
		name = OrbitTransmit
		type = VesselParameterGroup
		title = Orbit and Transmit Science
		define = OrbitTransmit
		
		completedMessage = With our new found abilities, we can reach the stars!
		
		rewardFunds = 5500 / ContractMultiplier()
		rewardScience = 7 / ContractMultiplier()
		rewardReputation = 4 / ContractMultiplier()
		
		completeInSequence = true
		disableOnStateChange = true
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER
		{
			name = HasNoCrew
			type = HasCrew
			maxCrew = 0
			minCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
        {
            name = PartValidation
            type = PartValidation

			category = Communication
            
			minCount = 1
			
        }
		PARAMETER
        {
            name = PartValidation2
            type = PartValidation

			category = Electrical

            minCount = 2
        }
		PARAMETER
        {
            name = PartValidation3
            type = PartValidation

			category = Science

            minCount = 1
        }
		PARAMETER
		{
			name = Orbit
			type = Orbit
			targetBody = HomeWorld()
			minInclination = 0
			title = Reach Orbit
			disableOnStateChange = true
			hideChildren = true
		}
		PARAMETER
		{
			name = CollectScience
			type = CollectScience
			location = Space
			recoveryMethod = Transmit
			title = Transmit science home
			disableOnStateChange
			completeInSequence = true
			hideChildren
		}
}
